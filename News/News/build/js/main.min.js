/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "" + ({}[chunkId]||chunkId) + ".min.js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/*!************************!*\
  !*** ./Scripts/app.js ***!
  \************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _MainPresenter = __webpack_require__(/*! ./Presenters/MainPresenter */ 1);
	
	var _MainPresenter2 = _interopRequireDefault(_MainPresenter);
	
	__webpack_require__(/*! ../Styles/site.less */ 19);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	(function () {
	    var mainPresenter = new _MainPresenter2.default();
	    mainPresenter.initialize();
	})();

/***/ },

/***/ 1:
/*!*********************************************!*\
  !*** ./Scripts/Presenters/MainPresenter.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _Observable = __webpack_require__(/*! ../Common/Observable */ 2);
	
	var _Observable2 = _interopRequireDefault(_Observable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var MainPresenter = function () {
	    function MainPresenter() {
	        _classCallCheck(this, MainPresenter);
	
	        this._observable = new _Observable2.default();
	        this._sourcePresenter = null;
	        this._articlesPresenter = null;
	    }
	
	    // called from observable, when "sourceChanged" is emited.
	
	
	    _createClass(MainPresenter, [{
	        key: "onSourceChanged",
	        value: function onSourceChanged(newSourceId) {
	            var _this = this;
	
	            // load article modules.
	            // https://webpack.github.io/docs/code-splitting.html
	            if (!this._articlesPresenter) {
	                __webpack_require__.e/* require */(1, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(/*! ./ArticlesPresenter */ 3), __webpack_require__(/*! ../Services/ArticleService */ 4), __webpack_require__(/*! ../Views/ArticlesView */ 9)]; (function (ArticlesPresenter, ArticleService, ArticlesView) {
	                    _this._articlesPresenter = new ArticlesPresenter.default(new ArticlesView.default(), new ArticleService.default(), _this._observable);
	                    _this._articlesPresenter.loadArticles(newSourceId);
	                }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});
	            } else {
	                this._articlesPresenter.loadArticles(newSourceId);
	            }
	        }
	    }, {
	        key: "initialize",
	        value: function initialize() {
	            var _this2 = this;
	
	            this._observable.addObserver("sourceChanged", this.onSourceChanged.bind(this));
	
	            // load article modules.
	            // https://webpack.github.io/docs/code-splitting.html
	            if (!this._articlesPresenter) {
	                __webpack_require__.e/* require */(2, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(/*! ./SourcePresenter */ 13), __webpack_require__(/*! ../Services/SourceService */ 14), __webpack_require__(/*! ../Views/SourcesView */ 17)]; (function (SourcePresenter, SourceService, SourcesView) {
	                    _this2._sourcePresenter = new SourcePresenter.default(new SourcesView.default(), new SourceService.default(), _this2._observable);
	                    _this2._sourcePresenter.loadSources();
	                }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});
	            } else {
	                this._sourcePresenter.loadSources();
	            }
	        }
	    }]);
	
	    return MainPresenter;
	}();
	
	exports.default = MainPresenter;

/***/ },

/***/ 2:
/*!**************************************!*\
  !*** ./Scripts/Common/Observable.js ***!
  \**************************************/
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Observable = function () {
	    function Observable() {
	        _classCallCheck(this, Observable);
	
	        this._observers = new Map();
	    }
	
	    _createClass(Observable, [{
	        key: "addObserver",
	        value: function addObserver(label, callback) {
	            this._observers.has(label) || this._observers.set(label, []);
	            this._observers.get(label).push(callback);
	        }
	    }, {
	        key: "removeObserver",
	        value: function removeObserver(label, callback) {
	            var observers = this._observers.get(label);
	            var index = void 0;
	
	            if (observers && observers.length) {
	                index = observers.reduce(function (i, observer, index) {
	                    return isFunction(observer) && observer === callback ? i = index : i;
	                }, -1);
	
	                if (index > -1) {
	                    observers.splice(index, 1);
	                    this._observers.set(label, observers);
	                    return true;
	                }
	            }
	            return false;
	        }
	    }, {
	        key: "emit",
	        value: function emit(label) {
	            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	                args[_key - 1] = arguments[_key];
	            }
	
	            var observers = this._observers.get(label);
	            if (observers && observers.length) {
	                observers.forEach(function (observer) {
	                    observer.apply(undefined, args);
	                });
	                return true;
	            }
	            return false;
	        }
	    }]);
	
	    return Observable;
	}();
	
	exports.default = Observable;

/***/ },

/***/ 19:
/*!**************************!*\
  !*** ./Styles/site.less ***!
  \**************************/
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }

/******/ });
//# sourceMappingURL=main.min.js.map